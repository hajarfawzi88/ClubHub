trigger:
- main

pool:
  name: 'Default'

variables:
  imageName: 'flaskclubs'
  acrLoginServer: 'flaskclubs.azurecr.io'
  azureServiceConnection: 'ClubHubConnection'
  azureWebAppName: 'flaskclubsapp'
  resourceGroupName: 'ClubHubResource'
  dockerUsername: 'flaskclubs'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - script: |
        python --version
        python -m pip install --upgrade pip
        pip --version
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - script: |
        docker build -t $(imageName) .
        docker tag $(imageName) $(acrLoginServer)/$(imageName):$(Build.BuildId)
        echo $(dockerPassword) | docker login $(acrLoginServer) -u $(dockerUsername) --password-stdin
        docker push $(acrLoginServer)/$(imageName):$(Build.BuildId)
      env:
        dockerPassword: $(DOCKER_PASSWORD)  # Ensure DOCKER_PASSWORD is a secret variable
      displayName: 'Build and push Docker image'

- stage: Deploy
  jobs:
  - deployment: DeployToWebApp
    environment: 'production'
    pool:
      name: 'Default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: $(azureServiceConnection)
              appName: $(azureWebAppName)
              resourceGroupName: $(resourceGroupName)
              containers: |
                $(acrLoginServer)/$(imageName):$(Build.BuildId)
            displayName: 'Deploy to Azure Web App'
